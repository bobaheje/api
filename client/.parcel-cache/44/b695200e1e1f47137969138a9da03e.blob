{"mappings":"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","sources":["./node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","./src/scripts/index.ts","./node_modules/@parcel/transformer-js/lib/esmodule-helpers.js","./node_modules/navigo/lib/navigo.min.js","./node_modules/navigo/lib/webpack:/Navigo/webpack/universalModuleDefinition","./node_modules/navigo/lib/webpack:/Navigo/src/constants.ts","./node_modules/navigo/lib/webpack:/Navigo/src/utils.ts","./node_modules/navigo/lib/webpack:/Navigo/src/Q.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/setLocationPath.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/matchPathToRegisteredRoutes.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForDeprecationMethods.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForForceOp.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/updateBrowserURL.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForLeaveHook.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/updateState.ts","./node_modules/navigo/lib/webpack:/Navigo/src/lifecycles.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForAlreadyHook.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForBeforeHook.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/callHandler.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForAfterHook.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForNotFoundHandler.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/errorOut.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/flushCurrent.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/processMatches.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/waitingList.ts","./node_modules/navigo/lib/webpack:/Navigo/src/index.ts","./node_modules/navigo/lib/webpack:/Navigo/webpack/bootstrap","./node_modules/navigo/lib/webpack:/Navigo/webpack/startup","./node_modules/navigo/lib/webpack:/Navigo/webpack/runtime/define property getters","./node_modules/navigo/lib/webpack:/Navigo/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":[null,null,null,null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Navigo\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Navigo\"] = factory();\n\telse\n\t\troot[\"Navigo\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","export const PARAMETER_REGEXP = /([:*])(\\w+)/g;\nexport const REPLACE_VARIABLE_REGEXP = \"([^/]+)\";\nexport const WILDCARD_REGEXP = /\\*/g;\nexport const REPLACE_WILDCARD = \"?(?:.*)\";\nexport const NOT_SURE_REGEXP = /\\/\\?/g;\nexport const REPLACE_NOT_SURE = \"/?([^/]+|)\";\nexport const START_BY_SLASH_REGEXP = \"(?:/^|^)\";\nexport const MATCH_REGEXP_FLAGS = \"\";\n","import {\n  RouteHooksStorage,\n  Match,\n  Route,\n  NavigateOptions,\n  ResolveOptions,\n  QContext,\n  ResolveStrategy,\n} from \"../index\";\n\nimport {\n  PARAMETER_REGEXP,\n  WILDCARD_REGEXP,\n  REPLACE_VARIABLE_REGEXP,\n  REPLACE_WILDCARD,\n  START_BY_SLASH_REGEXP,\n  MATCH_REGEXP_FLAGS,\n  REPLACE_NOT_SURE,\n  NOT_SURE_REGEXP,\n} from \"./constants\";\n\nexport function getCurrentEnvURL(fallback = \"/\"): string {\n  if (windowAvailable()) {\n    return location.pathname + location.search + location.hash;\n  }\n  return fallback;\n}\nexport function clean(s: string) {\n  return s.replace(/\\/+$/, \"\").replace(/^\\/+/, \"\");\n}\nexport function isString(s: any): boolean {\n  return typeof s === \"string\";\n}\nexport function isFunction(s: any): boolean {\n  return typeof s === \"function\";\n}\nexport function extractHashFromURL(url: string) {\n  if (url && url.indexOf(\"#\") >= 0) {\n    return url.split(\"#\").pop() || \"\";\n  }\n  return \"\";\n}\nexport function regExpResultToParams(match, names: string[]) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce((params, value, index) => {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\nexport function extractGETParameters(url: string) {\n  const tmp = clean(url).split(/\\?(.*)?$/);\n  return [clean(tmp[0]), tmp.slice(1).join(\"\")];\n}\nexport function parseQuery(queryString: string): Object {\n  var query = {};\n  var pairs = queryString.split(\"&\");\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    if (pair[0] !== \"\") {\n      let key = decodeURIComponent(pair[0]);\n      if (!query[key]) {\n        query[key] = decodeURIComponent(pair[1] || \"\");\n      } else {\n        if (!Array.isArray(query[key])) query[key] = [query[key]];\n        query[key].push(decodeURIComponent(pair[1] || \"\"));\n      }\n    }\n  }\n  return query;\n}\nexport function matchRoute(context: QContext, route: Route): false | Match {\n  const [current, GETParams] = extractGETParameters(\n    clean(context.currentLocationPath)\n  );\n  const params = GETParams === \"\" ? null : parseQuery(GETParams);\n  const paramNames = [];\n  let pattern;\n  if (isString(route.path)) {\n    pattern =\n      START_BY_SLASH_REGEXP +\n      clean(route.path as string)\n        .replace(PARAMETER_REGEXP, function (full, dots, name) {\n          paramNames.push(name);\n          return REPLACE_VARIABLE_REGEXP;\n        })\n        .replace(WILDCARD_REGEXP, REPLACE_WILDCARD)\n        .replace(NOT_SURE_REGEXP, REPLACE_NOT_SURE) +\n      \"$\";\n    if (clean(route.path as string) === \"\") {\n      if (clean(current) === \"\") {\n        return {\n          url: current,\n          queryString: GETParams,\n          hashString: extractHashFromURL(context.to),\n          route: route,\n          data: null,\n          params,\n        };\n      }\n    }\n  } else {\n    pattern = route.path;\n  }\n  const regexp = new RegExp(pattern, MATCH_REGEXP_FLAGS);\n  const match = current.match(regexp);\n\n  if (match) {\n    const data = isString(route.path)\n      ? regExpResultToParams(match, paramNames)\n      : match.groups\n      ? match.groups\n      : match.slice(1);\n    return {\n      url: clean(current.replace(new RegExp(`^${context.instance.root}`), \"\")),\n      queryString: GETParams,\n      hashString: extractHashFromURL(context.to),\n      route: route,\n      data,\n      params,\n    };\n  }\n  return false;\n}\nexport function pushStateAvailable(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.history &&\n    window.history.pushState\n  );\n}\nexport function undefinedOrTrue(obj, key: string): boolean {\n  return typeof obj[key] === \"undefined\" || obj[key] === true;\n}\nexport function parseNavigateOptions(source?: string): NavigateOptions {\n  if (!source) return {};\n  const pairs = source.split(\",\");\n  const options: NavigateOptions = {};\n  let resolveOptions: ResolveOptions;\n\n  pairs.forEach((str) => {\n    const temp = str.split(\":\").map((v) => v.replace(/(^ +| +$)/g, \"\"));\n    switch (temp[0]) {\n      case \"historyAPIMethod\":\n        options.historyAPIMethod = temp[1];\n        break;\n      case \"resolveOptionsStrategy\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.strategy = temp[1] as ResolveStrategy;\n        break;\n      case \"resolveOptionsHash\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.hash = temp[1] === \"true\";\n        break;\n      case \"updateBrowserURL\":\n      case \"callHandler\":\n      case \"updateState\":\n      case \"force\":\n        options[temp[0]] = temp[1] === \"true\";\n        break;\n    }\n  });\n  if (resolveOptions) {\n    options.resolveOptions = resolveOptions;\n  }\n  return options;\n}\nexport function windowAvailable() {\n  return typeof window !== \"undefined\";\n}\nexport function accumulateHooks(\n  hooks = [],\n  result: RouteHooksStorage = {}\n): RouteHooksStorage {\n  hooks\n    .filter((h) => h)\n    .forEach((h) => {\n      [\"before\", \"after\", \"already\", \"leave\"].forEach((type) => {\n        if (h[type]) {\n          if (!result[type]) result[type] = [];\n          result[type].push(h[type]);\n        }\n      });\n    });\n  return result as RouteHooksStorage;\n}\n","type QChild = {\n  type: \"child\";\n  funcs: Array<Function | Array<any> | QChild>;\n};\n\nexport default function Q(\n  funcs: Array<Function | Array<any> | QChild>,\n  c?: any,\n  done?: Function\n) {\n  const context = c || {};\n  let idx = 0;\n\n  (function next() {\n    if (!funcs[idx]) {\n      if (done) {\n        done(context);\n      }\n      return;\n    }\n    if (Array.isArray(funcs[idx])) {\n      funcs.splice(\n        idx,\n        1,\n        ...(funcs[idx][0](context) ? funcs[idx][1] : funcs[idx][2])\n      );\n      next();\n    } else {\n      // console.log(funcs[idx].name + \" / \" + JSON.stringify(context));\n      // console.log(funcs[idx].name);\n      (funcs[idx] as Function)(context, (moveForward) => {\n        if (typeof moveForward === \"undefined\" || moveForward === true) {\n          idx += 1;\n          next();\n        } else if (done) {\n          done(context);\n        }\n      });\n    }\n  })();\n}\n\nQ.if = function (condition: Function, one, two) {\n  if (!Array.isArray(one)) one = [one];\n  if (!Array.isArray(two)) two = [two];\n  return [condition, one, two];\n};\n","import { QContext } from \"../../index\";\nimport { getCurrentEnvURL } from \"../utils\";\n\nexport default function setLocationPath(context: QContext, done) {\n  if (typeof context.currentLocationPath === \"undefined\") {\n    context.currentLocationPath = context.to = getCurrentEnvURL(\n      context.instance.root\n    );\n  }\n  context.currentLocationPath = context.instance._checkForAHash(\n    context.currentLocationPath\n  );\n  done();\n}\n","import { matchRoute } from \"../utils\";\nimport { QContext, Match } from \"../../index\";\n\nexport default function matchPathToRegisteredRoutes(context: QContext, done) {\n  for (let i = 0; i < context.instance.routes.length; i++) {\n    const route = context.instance.routes[i];\n    const match: false | Match = matchRoute(context, route);\n    if (match) {\n      if (!context.matches) context.matches = [];\n      context.matches.push(match);\n      if (context.resolveOptions.strategy === \"ONE\") {\n        done();\n        return;\n      }\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function checkForDeprecationMethods(context: QContext, done) {\n  if (context.navigateOptions) {\n    if (typeof context.navigateOptions[\"shouldResolve\"] !== \"undefined\") {\n      console.warn(\n        `\"shouldResolve\" is deprecated. Please check the documentation.`\n      );\n    }\n    if (typeof context.navigateOptions[\"silent\"] !== \"undefined\") {\n      console.warn(`\"silent\" is deprecated. Please check the documentation.`);\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function checkForForceOp(context: QContext, done) {\n  if (context.navigateOptions.force === true) {\n    context.instance._setCurrent([\n      context.instance._pathToMatchObject(context.to),\n    ]);\n    done(false);\n  } else {\n    done();\n  }\n}\n","import { undefinedOrTrue, pushStateAvailable, windowAvailable } from \"../utils\";\nimport { QContext } from \"../../index\";\n\nconst isWindowAvailable = windowAvailable();\nconst isPushStateAvailable = pushStateAvailable();\n\nexport default function updateBrowserURL(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateBrowserURL\")) {\n    const value = `/${context.to}`.replace(/\\/\\//g, \"/\"); // making sure that we don't have two slashes\n    const isItUsingHash =\n      isWindowAvailable &&\n      context.resolveOptions &&\n      context.resolveOptions.hash === true;\n    if (isPushStateAvailable) {\n      history[context.navigateOptions.historyAPIMethod || \"pushState\"](\n        context.navigateOptions.stateObj || {},\n        context.navigateOptions.title || \"\",\n        isItUsingHash ? `#${value}` : value\n      );\n      // This is to solve a nasty bug where the page doesn't scroll to the anchor.\n      // We set a microtask to update the hash only.\n      if (location && location.hash) {\n        context.instance.__freezeListening = true;\n        setTimeout(() => {\n          if (!isItUsingHash) {\n            let tmp = location.hash;\n            location.hash = \"\";\n            location.hash = tmp;\n          }\n          context.instance.__freezeListening = false;\n        }, 1);\n      }\n    } else if (isWindowAvailable) {\n      window.location.href = context.to;\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForLeaveHook(context: QContext, done) {\n  const instance = context.instance;\n  if (!instance.lastResolved()) {\n    done();\n    return;\n  }\n  Q(\n    instance.lastResolved().map((oldMatch) => {\n      return (_, leaveLoopDone) => {\n        // no leave hook\n        if (!oldMatch.route.hooks || !oldMatch.route.hooks.leave) {\n          leaveLoopDone();\n          return;\n        }\n        let runHook = false;\n        const newLocationVSOldMatch = context.instance.matchLocation(\n          oldMatch.route.path,\n          context.currentLocationPath,\n          false\n        );\n        if (oldMatch.route.path !== \"*\") {\n          runHook = !newLocationVSOldMatch;\n        } else {\n          const someOfTheLastOnesMatch = context.matches\n            ? context.matches.find((match) => {\n                return oldMatch.route.path === match.route.path;\n              })\n            : false;\n          runHook = !someOfTheLastOnesMatch;\n        }\n        if (undefinedOrTrue(context.navigateOptions, \"callHooks\") && runHook) {\n          Q(\n            oldMatch.route.hooks.leave\n              .map((f) => {\n                // just so we match the Q interface\n                return (_, d) =>\n                  f(\n                    (shouldStop) => {\n                      if (shouldStop === false) {\n                        context.instance.__markAsClean(context);\n                      } else {\n                        d();\n                      }\n                    },\n                    context.matches && context.matches.length > 0\n                      ? context.matches.length === 1\n                        ? context.matches[0]\n                        : context.matches\n                      : undefined\n                  );\n              })\n              .concat([() => leaveLoopDone()])\n          );\n          return;\n        } else {\n          leaveLoopDone();\n        }\n      };\n    }),\n    {},\n    () => done()\n  );\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function updateState(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateState\")) {\n    context.instance._setCurrent(context.matches);\n  }\n  done();\n}\n","import { QContext } from \"../index\";\nimport Q from \"./Q\";\nimport checkForLeaveHook from \"./middlewares/checkForLeaveHook\";\nimport checkForBeforeHook from \"./middlewares/checkForBeforeHook\";\nimport callHandler from \"./middlewares/callHandler\";\nimport checkForAfterHook from \"./middlewares/checkForAfterHook\";\nimport checkForAlreadyHook from \"./middlewares/checkForAlreadyHook\";\nimport checkForNotFoundHandler from \"./middlewares/checkForNotFoundHandler\";\nimport errorOut from \"./middlewares/errorOut\";\nimport flushCurrent from \"./middlewares/flushCurrent\";\nimport updateState from \"./middlewares/updateState\";\n\nexport const foundLifecycle = [\n  checkForAlreadyHook,\n  checkForBeforeHook,\n  callHandler,\n  checkForAfterHook,\n];\n\nexport const notFoundLifeCycle = [\n  checkForLeaveHook,\n  checkForNotFoundHandler,\n  Q.if(\n    ({ notFoundHandled }: QContext) => notFoundHandled,\n    foundLifecycle.concat([updateState]),\n    [errorOut, flushCurrent]\n  ),\n];\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForAlreadyHook(context: QContext, done) {\n  const current = context.instance.lastResolved();\n  if (\n    current &&\n    current[0] &&\n    current[0].route === context.match.route &&\n    current[0].url === context.match.url &&\n    current[0].queryString === context.match.queryString\n  ) {\n    current.forEach((c) => {\n      if (c.route.hooks && c.route.hooks.already) {\n        if (undefinedOrTrue(context.navigateOptions, \"callHooks\")) {\n          c.route.hooks.already.forEach((f) => f(context.match));\n        }\n      }\n    });\n    done(false);\n    return;\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForBeforeHook(context: QContext, done) {\n  if (\n    context.match.route.hooks &&\n    context.match.route.hooks.before &&\n    undefinedOrTrue(context.navigateOptions, \"callHooks\")\n  ) {\n    Q(\n      context.match.route.hooks.before\n        .map((f) => {\n          // just so we match the Q interface\n          return function beforeHookInternal(_, d) {\n            return f((shouldStop) => {\n              if (shouldStop === false) {\n                context.instance.__markAsClean(context);\n              } else {\n                d();\n              }\n            }, context.match);\n          };\n        })\n        .concat([() => done()])\n    );\n  } else {\n    done();\n  }\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function callHandler(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"callHandler\")) {\n    context.match.route.handler(context.match);\n  }\n  context.instance.updatePageLinks();\n  done();\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForAfterHook(context: QContext, done) {\n  if (\n    context.match.route.hooks &&\n    context.match.route.hooks.after &&\n    undefinedOrTrue(context.navigateOptions, \"callHooks\")\n  ) {\n    context.match.route.hooks.after.forEach((f) => f(context.match));\n  }\n  done();\n}\n","import { QContext, Match } from \"../../index\";\nimport {\n  parseQuery,\n  extractGETParameters,\n  clean,\n  extractHashFromURL,\n} from \"../utils\";\n\nexport default function checkForNotFoundHandler(context: QContext, done) {\n  const notFoundRoute = context.instance._notFoundRoute;\n  if (notFoundRoute) {\n    context.notFoundHandled = true;\n    const [url, queryString] = extractGETParameters(\n      context.currentLocationPath\n    );\n    const hashString = extractHashFromURL(context.to);\n    notFoundRoute.path = clean(url);\n    const notFoundMatch: Match = {\n      url: notFoundRoute.path,\n      queryString,\n      hashString,\n      data: null,\n      route: notFoundRoute,\n      params: queryString !== \"\" ? parseQuery(queryString) : null,\n    };\n    context.matches = [notFoundMatch];\n    context.match = notFoundMatch;\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function errorOut(context: QContext, done) {\n  if (\n    !context.resolveOptions ||\n    context.resolveOptions.noMatchWarning === false ||\n    typeof context.resolveOptions.noMatchWarning === \"undefined\"\n  )\n    console.warn(\n      `Navigo: \"${context.currentLocationPath}\" didn't match any of the registered routes.`\n    );\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function flushCurrent(context: QContext, done) {\n  context.instance._setCurrent(null);\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { foundLifecycle } from \"../lifecycles\";\nimport updateState from \"./updateState\";\nimport checkForLeaveHook from \"./checkForLeaveHook\";\n\nexport default function processMatches(context: QContext, done) {\n  let idx = 0;\n  function nextMatch() {\n    if (idx === context.matches.length) {\n      updateState(context, done);\n      return;\n    }\n    Q(\n      foundLifecycle,\n      { ...context, match: context.matches[idx] },\n      function end() {\n        idx += 1;\n        nextMatch();\n      }\n    );\n  }\n  checkForLeaveHook(context, nextMatch);\n}\n","import { QContext } from \"../../index\";\n\nexport default function waitingList(context: QContext) {\n  context.instance.__markAsClean(context);\n}\n","import {\n  Match,\n  Route,\n  RouteHooks,\n  QContext,\n  NavigateOptions,\n  ResolveOptions,\n  GenerateOptions,\n  Handler,\n  RouterOptions,\n} from \"../index\";\nimport NavigoRouter from \"../index\";\nimport {\n  pushStateAvailable,\n  matchRoute,\n  parseQuery,\n  extractGETParameters,\n  isFunction,\n  isString,\n  clean,\n  parseNavigateOptions,\n  windowAvailable,\n  getCurrentEnvURL,\n  accumulateHooks,\n  extractHashFromURL,\n} from \"./utils\";\nimport Q from \"./Q\";\nimport setLocationPath from \"./middlewares/setLocationPath\";\nimport matchPathToRegisteredRoutes from \"./middlewares/matchPathToRegisteredRoutes\";\nimport checkForDeprecationMethods from \"./middlewares/checkForDeprecationMethods\";\nimport checkForForceOp from \"./middlewares/checkForForceOp\";\nimport updateBrowserURL from \"./middlewares/updateBrowserURL\";\nimport processMatches from \"./middlewares/processMatches\";\nimport waitingList from \"./middlewares/waitingList\";\n\nimport { notFoundLifeCycle } from \"./lifecycles\";\n\nconst DEFAULT_LINK_SELECTOR = \"[data-navigo]\";\n\nexport default function Navigo(appRoute?: string, options?: RouterOptions) {\n  let DEFAULT_RESOLVE_OPTIONS: RouterOptions = options || {\n    strategy: \"ONE\",\n    hash: false,\n    noMatchWarning: false,\n    linksSelector: DEFAULT_LINK_SELECTOR,\n  };\n  let self: NavigoRouter = this;\n  let root = \"/\";\n  let current: Match[] = null;\n  let routes: Route[] = [];\n  let destroyed = false;\n  let genericHooks: RouteHooks;\n\n  const isPushStateAvailable = pushStateAvailable();\n  const isWindowAvailable = windowAvailable();\n\n  if (!appRoute) {\n    console.warn(\n      'Navigo requires a root path in its constructor. If not provided will use \"/\" as default.'\n    );\n  } else {\n    root = clean(appRoute);\n  }\n\n  function _checkForAHash(url: string): string {\n    if (url.indexOf(\"#\") >= 0) {\n      if (DEFAULT_RESOLVE_OPTIONS.hash === true) {\n        url = url.split(\"#\")[1] || \"/\";\n      } else {\n        url = url.split(\"#\")[0];\n      }\n    }\n    return url;\n  }\n  function composePathWithRoot(path: string) {\n    return clean(`${root}/${clean(path)}`);\n  }\n  function createRoute(\n    path: string | RegExp,\n    handler: Handler,\n    hooks: RouteHooks[],\n    name?: string\n  ): Route {\n    path = isString(path) ? composePathWithRoot(path as string) : path;\n    return {\n      name: name || clean(String(path)),\n      path,\n      handler,\n      hooks: accumulateHooks(hooks),\n    };\n  }\n\n  // public APIs\n  function on(\n    path: string | Function | Object | RegExp,\n    handler?: Handler,\n    hooks?: RouteHooks\n  ) {\n    if (typeof path === \"object\" && !(path instanceof RegExp)) {\n      Object.keys(path).forEach((p) => {\n        if (typeof path[p] === \"function\") {\n          this.on(p, path[p]);\n        } else {\n          const { uses: handler, as: name, hooks } = path[p];\n          routes.push(createRoute(p, handler, [genericHooks, hooks], name));\n        }\n      });\n      return this;\n    } else if (typeof path === \"function\") {\n      hooks = handler as RouteHooks;\n      handler = path as Handler;\n      path = root;\n    }\n    routes.push(\n      createRoute(path as string | RegExp, handler, [genericHooks, hooks])\n    );\n    return this;\n  }\n  function resolve(to?: string, options?: ResolveOptions): false | Match[] {\n    if (self.__dirty) {\n      self.__waiting.push(() => self.resolve(to, options));\n      return;\n    } else {\n      self.__dirty = true;\n    }\n    to = to ? `${clean(root)}/${clean(to)}` : undefined;\n    // console.log(\"-- resolve --> \" + to, self.__dirty);\n    const context: QContext = {\n      instance: self,\n      to,\n      currentLocationPath: to,\n      navigateOptions: {},\n      resolveOptions: { ...DEFAULT_RESOLVE_OPTIONS, ...options },\n    };\n    Q(\n      [\n        setLocationPath,\n        matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => matches && matches.length > 0,\n          processMatches,\n          notFoundLifeCycle\n        ),\n      ],\n      context,\n      waitingList\n    );\n\n    return context.matches ? context.matches : false;\n  }\n  function navigate(to: string, navigateOptions?: NavigateOptions): void {\n    // console.log(\"-- navigate --> \" + to, self.__dirty);\n    if (self.__dirty) {\n      self.__waiting.push(() => self.navigate(to, navigateOptions));\n      return;\n    } else {\n      self.__dirty = true;\n    }\n    to = `${clean(root)}/${clean(to)}`;\n    const context: QContext = {\n      instance: self,\n      to,\n      navigateOptions: navigateOptions || {},\n      resolveOptions:\n        navigateOptions && navigateOptions.resolveOptions\n          ? navigateOptions.resolveOptions\n          : DEFAULT_RESOLVE_OPTIONS,\n      currentLocationPath: _checkForAHash(to),\n    };\n    Q(\n      [\n        checkForDeprecationMethods,\n        checkForForceOp,\n        matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => matches && matches.length > 0,\n          processMatches,\n          notFoundLifeCycle\n        ),\n        updateBrowserURL,\n        waitingList,\n      ],\n      context,\n      waitingList\n    );\n  }\n  function navigateByName(\n    name: string,\n    data?: Object,\n    options?: NavigateOptions\n  ): boolean {\n    const url = generate(name, data);\n    if (url !== null) {\n      navigate(url.replace(new RegExp(`^\\/?${root}`), \"\"), options);\n      return true;\n    }\n    return false;\n  }\n  function off(what: string | RegExp | Function) {\n    this.routes = routes = routes.filter((r) => {\n      if (isString(what)) {\n        return clean(r.path as string) !== clean(what as string);\n      } else if (isFunction(what)) {\n        return what !== r.handler;\n      }\n      return String(r.path) !== String(what);\n    });\n    return this;\n  }\n  function listen() {\n    if (isPushStateAvailable) {\n      this.__popstateListener = () => {\n        if (!self.__freezeListening) {\n          resolve();\n        }\n      };\n      window.addEventListener(\"popstate\", this.__popstateListener);\n    }\n  }\n  function destroy() {\n    this.routes = routes = [];\n    if (isPushStateAvailable) {\n      window.removeEventListener(\"popstate\", this.__popstateListener);\n    }\n    this.destroyed = destroyed = true;\n  }\n  function notFound(handler, hooks?: RouteHooks) {\n    self._notFoundRoute = createRoute(\n      \"*\",\n      handler,\n      [genericHooks, hooks],\n      \"__NOT_FOUND__\"\n    );\n    return this;\n  }\n  function updatePageLinks() {\n    if (!isWindowAvailable) return;\n    findLinks().forEach((link) => {\n      if (\n        \"false\" === link.getAttribute(\"data-navigo\") ||\n        \"_blank\" === link.getAttribute(\"target\")\n      ) {\n        if (link.hasListenerAttached) {\n          link.removeEventListener(\"click\", link.navigoHandler);\n        }\n        return;\n      }\n      if (!link.hasListenerAttached) {\n        link.hasListenerAttached = true;\n        link.navigoHandler = function (e) {\n          if (\n            (e.ctrlKey || e.metaKey) &&\n            e.target.tagName.toLowerCase() === \"a\"\n          ) {\n            return false;\n          }\n          let location = link.getAttribute(\"href\");\n          if (typeof location === \"undefined\" || location === null) {\n            return false;\n          }\n          // handling absolute paths\n          if (location.match(/^(http|https)/) && typeof URL !== \"undefined\") {\n            try {\n              const u = new URL(location);\n              location = u.pathname + u.search;\n            } catch (err) {}\n          }\n          const options = parseNavigateOptions(\n            link.getAttribute(\"data-navigo-options\")\n          );\n\n          if (!destroyed) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.navigate(clean(location), options);\n          }\n        };\n        link.addEventListener(\"click\", link.navigoHandler);\n      }\n    });\n    return self;\n  }\n  function findLinks() {\n    if (isWindowAvailable) {\n      return [].slice.call(\n        document.querySelectorAll(\n          DEFAULT_RESOLVE_OPTIONS.linksSelector || DEFAULT_LINK_SELECTOR\n        )\n      );\n    }\n    return [];\n  }\n  function link(path: string) {\n    return `/${root}/${clean(path)}`;\n  }\n  function setGenericHooks(hooks: RouteHooks) {\n    genericHooks = hooks;\n    return this;\n  }\n  function lastResolved(): Match[] | null {\n    return current;\n  }\n  function generate(\n    name: string,\n    data?: Object,\n    options?: GenerateOptions\n  ): string {\n    const route = routes.find((r) => r.name === name);\n    let result = null;\n    if (route) {\n      result = route.path as string;\n      if (data) {\n        for (let key in data) {\n          result = result.replace(\":\" + key, data[key]);\n        }\n      }\n      result = !result.match(/^\\//) ? `/${result}` : result;\n    }\n    if (result && options && !options.includeRoot) {\n      result = result.replace(new RegExp(`^/${root}`), \"\");\n    }\n    return result;\n  }\n  function getLinkPath(link) {\n    return link.getAttribute(\"href\");\n  }\n  function pathToMatchObject(path: string): Match {\n    const [url, queryString] = extractGETParameters(clean(path));\n    const params = queryString === \"\" ? null : parseQuery(queryString);\n    const hashString = extractHashFromURL(path);\n    const route = createRoute(url, () => {}, [genericHooks], url);\n    return {\n      url,\n      queryString,\n      hashString,\n      route,\n      data: null,\n      params: params,\n    };\n  }\n  function getCurrentLocation(): Match {\n    return pathToMatchObject(\n      clean(getCurrentEnvURL(root)).replace(new RegExp(`^${root}`), \"\")\n    );\n  }\n  function directMatchWithRegisteredRoutes(path: string): false | Match[] {\n    const context: QContext = {\n      instance: self,\n      currentLocationPath: path,\n      to: path,\n      navigateOptions: {},\n      resolveOptions: DEFAULT_RESOLVE_OPTIONS,\n    };\n    matchPathToRegisteredRoutes(context, () => {});\n    return context.matches ? context.matches : false;\n  }\n  function directMatchWithLocation(\n    path: string | RegExp,\n    currentLocation?: string,\n    annotatePathWithRoot?: boolean\n  ): false | Match {\n    if (\n      typeof currentLocation !== \"undefined\" &&\n      (typeof annotatePathWithRoot === \"undefined\" || annotatePathWithRoot)\n    ) {\n      currentLocation = composePathWithRoot(currentLocation);\n    }\n    const context: QContext = {\n      instance: self,\n      to: currentLocation,\n      currentLocationPath: currentLocation,\n    };\n    setLocationPath(context, () => {});\n    if (typeof path === \"string\") {\n      path =\n        typeof annotatePathWithRoot === \"undefined\" || annotatePathWithRoot\n          ? composePathWithRoot(path)\n          : path;\n    }\n    const match = matchRoute(context, {\n      name: String(path),\n      path,\n      handler: () => {},\n      hooks: {},\n    });\n    return match ? match : false;\n  }\n  function addHook(\n    type: string,\n    route: Route | string,\n    func: Function\n  ): Function {\n    if (typeof route === \"string\") {\n      route = getRoute(route);\n    }\n    if (route) {\n      if (!route.hooks[type]) route.hooks[type] = [];\n      route.hooks[type].push(func);\n      return () => {\n        (route as Route).hooks[type] = (route as Route).hooks[type].filter(\n          (f) => f !== func\n        );\n      };\n    } else {\n      console.warn(`Route doesn't exists: ${route}`);\n    }\n    return () => {};\n  }\n  function getRoute(nameOrHandler: string | Function): Route | undefined {\n    if (typeof nameOrHandler === \"string\") {\n      return routes.find((r) => r.name === composePathWithRoot(nameOrHandler));\n    }\n    return routes.find((r) => r.handler === nameOrHandler);\n  }\n  function __markAsClean(context: QContext) {\n    context.instance.__dirty = false;\n    if (context.instance.__waiting.length > 0) {\n      context.instance.__waiting.shift()();\n    }\n  }\n\n  this.root = root;\n  this.routes = routes;\n  this.destroyed = destroyed;\n  this.current = current;\n  this.__freezeListening = false;\n  this.__waiting = [];\n  this.__dirty = false;\n  this.__markAsClean = __markAsClean;\n\n  this.on = on;\n  this.off = off;\n  this.resolve = resolve;\n  this.navigate = navigate;\n  this.navigateByName = navigateByName;\n  this.destroy = destroy;\n  this.notFound = notFound;\n  this.updatePageLinks = updatePageLinks;\n  this.link = link;\n  this.hooks = setGenericHooks;\n  this.extractGETParameters = (url) =>\n    extractGETParameters(_checkForAHash(url));\n  this.lastResolved = lastResolved;\n  this.generate = generate;\n  this.getLinkPath = getLinkPath;\n  this.match = directMatchWithRegisteredRoutes;\n  this.matchLocation = directMatchWithLocation;\n  this.getCurrentLocation = getCurrentLocation;\n  this.addBeforeHook = addHook.bind(this, \"before\");\n  this.addAfterHook = addHook.bind(this, \"after\");\n  this.addAlreadyHook = addHook.bind(this, \"already\");\n  this.addLeaveHook = addHook.bind(this, \"leave\");\n  this.getRoute = getRoute;\n  this._pathToMatchObject = pathToMatchObject;\n  this._clean = clean;\n  this._checkForAHash = _checkForAHash;\n  this._setCurrent = (c) => (current = self.current = c);\n\n  listen.call(this);\n  updatePageLinks.call(this);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(407);\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"names":["HMR_HOST","HMR_PORT","HMR_SECURE","HMR_ENV_HASH","module","bundle","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","undefined","checkedAssets","acceptedAssets","assetsToAccept","location","protocol","indexOf","hostname","port","parent","isParcelRequire","WebSocket","getHostname","getPort","test","ws","onmessage","event","JSON","parse","type","removeErrorOverlay","assets","filter","asset","envHash","handled","forEach","didAccept","hmrAcceptCheck","root","id","depsByBundle","console","clear","hmrApply","i","length","hmrAcceptRun","window","reload","ansiDiagnostic","diagnostics","ansi","stack","codeframe","error","message","hints","join","overlay","createErrorOverlay","html","document","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","createElement","errorHTML","diagnostic","map","hint","innerHTML","modules","parents","k","d","dep","Array","isArray","concat","getParents","link","newLink","cloneNode","onload","parentNode","removeChild","setAttribute","getAttribute","split","Date","now","insertBefore","nextSibling","cssTimeout","setTimeout","links","querySelectorAll","href","servedFromHMRServer","RegExp","absolute","origin","updateLink","reloadCSS","deps","Function","output","cached","cache","some","v","cb","assetsToAlsoAccept","apply","router","init","addEventListener","t","n","exports","define","amd","Navigo","self","default","N","o","r","pathname","search","hash","replace","pop","s","slice","decodeURIComponent","a","h","currentLocationPath","l","p","f","c","path","url","queryString","hashString","u","to","route","params","g","m","match","y","reduce","groups","instance","history","pushState","splice","_checkForAHash","routes","matches","resolveOptions","strategy","navigateOptions","shouldResolve","silent","force","_setCurrent","_pathToMatchObject","if","w","L","historyAPIMethod","stateObj","title","__freezeListening","lastResolved","hooks","leave","matchLocation","find","__markAsClean","R","already","before","handler","updatePageLinks","after","S","A","_notFoundRoute","notFoundHandled","P","noMatchWarning","E","Object","assign","arguments","prototype","hasOwnProperty","j","C","linksSelector","name","String","__dirty","_","x","H","__waiting","resolve","navigate","O","b","hasListenerAttached","navigoHandler","ctrlKey","metaKey","target","tagName","toLowerCase","URL","preventDefault","stopPropagation","removeEventListener","includeRoot","z","destroyed","current","shift","on","keys","uses","as","off","U","q","navigateByName","I","destroy","__popstateListener","notFound","F","extractGETParameters","generate","getLinkPath","getCurrentLocation","M","addBeforeHook","T","bind","addAfterHook","addAlreadyHook","addLeaveHook","getRoute","_clean","defineProperty","enumerable","get","factory","this","PARAMETER_REGEXP","WILDCARD_REGEXP","NOT_SURE_REGEXP","getCurrentEnvURL","fallback","windowAvailable","clean","isString","extractHashFromURL","tmp","parseQuery","query","pairs","pair","key","matchRoute","context","pattern","GETParams","paramNames","full","dots","regexp","names","value","index","regExpResultToParams","pushStateAvailable","undefinedOrTrue","obj","accumulateHooks","result","Q","funcs","done","idx","next","moveForward","setLocationPath","matchPathToRegisteredRoutes","checkForDeprecationMethods","checkForForceOp","condition","one","two","isWindowAvailable","isPushStateAvailable","updateBrowserURL","isItUsingHash","checkForLeaveHook","oldMatch","leaveLoopDone","runHook","newLocationVSOldMatch","shouldStop","updateState","foundLifecycle","notFoundLifeCycle","notFoundRoute","notFoundMatch","processMatches","nextMatch","waitingList","DEFAULT_LINK_SELECTOR","appRoute","options","genericHooks","DEFAULT_RESOLVE_OPTIONS","composePathWithRoot","createRoute","err","source","str","temp","parseNavigateOptions","pathToMatchObject","addHook","func","nameOrHandler","what","currentLocation","annotatePathWithRoot","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","definition","prop"],"version":3,"file":"index.HASH_REF_5fb98dbe211a94e91d6f325cf6d0ad14.js.map","sourceRoot":"/__parcel_source_root/"}