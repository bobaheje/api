{"mappings":"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","sources":["./node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","./src/scripts/index.ts","./node_modules/@parcel/transformer-js/lib/esmodule-helpers.js","./node_modules/navigo/lib/navigo.min.js","./node_modules/navigo/lib/webpack:/Navigo/webpack/universalModuleDefinition","./node_modules/navigo/lib/webpack:/Navigo/src/constants.ts","./node_modules/navigo/lib/webpack:/Navigo/src/utils.ts","./node_modules/navigo/lib/webpack:/Navigo/src/Q.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/setLocationPath.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/matchPathToRegisteredRoutes.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForDeprecationMethods.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForForceOp.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/updateBrowserURL.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForLeaveHook.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/updateState.ts","./node_modules/navigo/lib/webpack:/Navigo/src/lifecycles.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForAlreadyHook.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForBeforeHook.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/callHandler.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForAfterHook.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/checkForNotFoundHandler.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/errorOut.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/flushCurrent.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/processMatches.ts","./node_modules/navigo/lib/webpack:/Navigo/src/middlewares/waitingList.ts","./node_modules/navigo/lib/webpack:/Navigo/src/index.ts","./node_modules/navigo/lib/webpack:/Navigo/webpack/bootstrap","./node_modules/navigo/lib/webpack:/Navigo/webpack/startup","./node_modules/navigo/lib/webpack:/Navigo/webpack/runtime/define property getters","./node_modules/navigo/lib/webpack:/Navigo/webpack/runtime/hasOwnProperty shorthand","./src/scripts/controllers/LoginController.ts"],"sourcesContent":[null,null,null,null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Navigo\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Navigo\"] = factory();\n\telse\n\t\troot[\"Navigo\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","export const PARAMETER_REGEXP = /([:*])(\\w+)/g;\nexport const REPLACE_VARIABLE_REGEXP = \"([^/]+)\";\nexport const WILDCARD_REGEXP = /\\*/g;\nexport const REPLACE_WILDCARD = \"?(?:.*)\";\nexport const NOT_SURE_REGEXP = /\\/\\?/g;\nexport const REPLACE_NOT_SURE = \"/?([^/]+|)\";\nexport const START_BY_SLASH_REGEXP = \"(?:/^|^)\";\nexport const MATCH_REGEXP_FLAGS = \"\";\n","import {\n  RouteHooksStorage,\n  Match,\n  Route,\n  NavigateOptions,\n  ResolveOptions,\n  QContext,\n  ResolveStrategy,\n} from \"../index\";\n\nimport {\n  PARAMETER_REGEXP,\n  WILDCARD_REGEXP,\n  REPLACE_VARIABLE_REGEXP,\n  REPLACE_WILDCARD,\n  START_BY_SLASH_REGEXP,\n  MATCH_REGEXP_FLAGS,\n  REPLACE_NOT_SURE,\n  NOT_SURE_REGEXP,\n} from \"./constants\";\n\nexport function getCurrentEnvURL(fallback = \"/\"): string {\n  if (windowAvailable()) {\n    return location.pathname + location.search + location.hash;\n  }\n  return fallback;\n}\nexport function clean(s: string) {\n  return s.replace(/\\/+$/, \"\").replace(/^\\/+/, \"\");\n}\nexport function isString(s: any): boolean {\n  return typeof s === \"string\";\n}\nexport function isFunction(s: any): boolean {\n  return typeof s === \"function\";\n}\nexport function extractHashFromURL(url: string) {\n  if (url && url.indexOf(\"#\") >= 0) {\n    return url.split(\"#\").pop() || \"\";\n  }\n  return \"\";\n}\nexport function regExpResultToParams(match, names: string[]) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce((params, value, index) => {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\nexport function extractGETParameters(url: string) {\n  const tmp = clean(url).split(/\\?(.*)?$/);\n  return [clean(tmp[0]), tmp.slice(1).join(\"\")];\n}\nexport function parseQuery(queryString: string): Object {\n  var query = {};\n  var pairs = queryString.split(\"&\");\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    if (pair[0] !== \"\") {\n      let key = decodeURIComponent(pair[0]);\n      if (!query[key]) {\n        query[key] = decodeURIComponent(pair[1] || \"\");\n      } else {\n        if (!Array.isArray(query[key])) query[key] = [query[key]];\n        query[key].push(decodeURIComponent(pair[1] || \"\"));\n      }\n    }\n  }\n  return query;\n}\nexport function matchRoute(context: QContext, route: Route): false | Match {\n  const [current, GETParams] = extractGETParameters(\n    clean(context.currentLocationPath)\n  );\n  const params = GETParams === \"\" ? null : parseQuery(GETParams);\n  const paramNames = [];\n  let pattern;\n  if (isString(route.path)) {\n    pattern =\n      START_BY_SLASH_REGEXP +\n      clean(route.path as string)\n        .replace(PARAMETER_REGEXP, function (full, dots, name) {\n          paramNames.push(name);\n          return REPLACE_VARIABLE_REGEXP;\n        })\n        .replace(WILDCARD_REGEXP, REPLACE_WILDCARD)\n        .replace(NOT_SURE_REGEXP, REPLACE_NOT_SURE) +\n      \"$\";\n    if (clean(route.path as string) === \"\") {\n      if (clean(current) === \"\") {\n        return {\n          url: current,\n          queryString: GETParams,\n          hashString: extractHashFromURL(context.to),\n          route: route,\n          data: null,\n          params,\n        };\n      }\n    }\n  } else {\n    pattern = route.path;\n  }\n  const regexp = new RegExp(pattern, MATCH_REGEXP_FLAGS);\n  const match = current.match(regexp);\n\n  if (match) {\n    const data = isString(route.path)\n      ? regExpResultToParams(match, paramNames)\n      : match.groups\n      ? match.groups\n      : match.slice(1);\n    return {\n      url: clean(current.replace(new RegExp(`^${context.instance.root}`), \"\")),\n      queryString: GETParams,\n      hashString: extractHashFromURL(context.to),\n      route: route,\n      data,\n      params,\n    };\n  }\n  return false;\n}\nexport function pushStateAvailable(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.history &&\n    window.history.pushState\n  );\n}\nexport function undefinedOrTrue(obj, key: string): boolean {\n  return typeof obj[key] === \"undefined\" || obj[key] === true;\n}\nexport function parseNavigateOptions(source?: string): NavigateOptions {\n  if (!source) return {};\n  const pairs = source.split(\",\");\n  const options: NavigateOptions = {};\n  let resolveOptions: ResolveOptions;\n\n  pairs.forEach((str) => {\n    const temp = str.split(\":\").map((v) => v.replace(/(^ +| +$)/g, \"\"));\n    switch (temp[0]) {\n      case \"historyAPIMethod\":\n        options.historyAPIMethod = temp[1];\n        break;\n      case \"resolveOptionsStrategy\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.strategy = temp[1] as ResolveStrategy;\n        break;\n      case \"resolveOptionsHash\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.hash = temp[1] === \"true\";\n        break;\n      case \"updateBrowserURL\":\n      case \"callHandler\":\n      case \"updateState\":\n      case \"force\":\n        options[temp[0]] = temp[1] === \"true\";\n        break;\n    }\n  });\n  if (resolveOptions) {\n    options.resolveOptions = resolveOptions;\n  }\n  return options;\n}\nexport function windowAvailable() {\n  return typeof window !== \"undefined\";\n}\nexport function accumulateHooks(\n  hooks = [],\n  result: RouteHooksStorage = {}\n): RouteHooksStorage {\n  hooks\n    .filter((h) => h)\n    .forEach((h) => {\n      [\"before\", \"after\", \"already\", \"leave\"].forEach((type) => {\n        if (h[type]) {\n          if (!result[type]) result[type] = [];\n          result[type].push(h[type]);\n        }\n      });\n    });\n  return result as RouteHooksStorage;\n}\n","type QChild = {\n  type: \"child\";\n  funcs: Array<Function | Array<any> | QChild>;\n};\n\nexport default function Q(\n  funcs: Array<Function | Array<any> | QChild>,\n  c?: any,\n  done?: Function\n) {\n  const context = c || {};\n  let idx = 0;\n\n  (function next() {\n    if (!funcs[idx]) {\n      if (done) {\n        done(context);\n      }\n      return;\n    }\n    if (Array.isArray(funcs[idx])) {\n      funcs.splice(\n        idx,\n        1,\n        ...(funcs[idx][0](context) ? funcs[idx][1] : funcs[idx][2])\n      );\n      next();\n    } else {\n      // console.log(funcs[idx].name + \" / \" + JSON.stringify(context));\n      // console.log(funcs[idx].name);\n      (funcs[idx] as Function)(context, (moveForward) => {\n        if (typeof moveForward === \"undefined\" || moveForward === true) {\n          idx += 1;\n          next();\n        } else if (done) {\n          done(context);\n        }\n      });\n    }\n  })();\n}\n\nQ.if = function (condition: Function, one, two) {\n  if (!Array.isArray(one)) one = [one];\n  if (!Array.isArray(two)) two = [two];\n  return [condition, one, two];\n};\n","import { QContext } from \"../../index\";\nimport { getCurrentEnvURL } from \"../utils\";\n\nexport default function setLocationPath(context: QContext, done) {\n  if (typeof context.currentLocationPath === \"undefined\") {\n    context.currentLocationPath = context.to = getCurrentEnvURL(\n      context.instance.root\n    );\n  }\n  context.currentLocationPath = context.instance._checkForAHash(\n    context.currentLocationPath\n  );\n  done();\n}\n","import { matchRoute } from \"../utils\";\nimport { QContext, Match } from \"../../index\";\n\nexport default function matchPathToRegisteredRoutes(context: QContext, done) {\n  for (let i = 0; i < context.instance.routes.length; i++) {\n    const route = context.instance.routes[i];\n    const match: false | Match = matchRoute(context, route);\n    if (match) {\n      if (!context.matches) context.matches = [];\n      context.matches.push(match);\n      if (context.resolveOptions.strategy === \"ONE\") {\n        done();\n        return;\n      }\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function checkForDeprecationMethods(context: QContext, done) {\n  if (context.navigateOptions) {\n    if (typeof context.navigateOptions[\"shouldResolve\"] !== \"undefined\") {\n      console.warn(\n        `\"shouldResolve\" is deprecated. Please check the documentation.`\n      );\n    }\n    if (typeof context.navigateOptions[\"silent\"] !== \"undefined\") {\n      console.warn(`\"silent\" is deprecated. Please check the documentation.`);\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function checkForForceOp(context: QContext, done) {\n  if (context.navigateOptions.force === true) {\n    context.instance._setCurrent([\n      context.instance._pathToMatchObject(context.to),\n    ]);\n    done(false);\n  } else {\n    done();\n  }\n}\n","import { undefinedOrTrue, pushStateAvailable, windowAvailable } from \"../utils\";\nimport { QContext } from \"../../index\";\n\nconst isWindowAvailable = windowAvailable();\nconst isPushStateAvailable = pushStateAvailable();\n\nexport default function updateBrowserURL(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateBrowserURL\")) {\n    const value = `/${context.to}`.replace(/\\/\\//g, \"/\"); // making sure that we don't have two slashes\n    const isItUsingHash =\n      isWindowAvailable &&\n      context.resolveOptions &&\n      context.resolveOptions.hash === true;\n    if (isPushStateAvailable) {\n      history[context.navigateOptions.historyAPIMethod || \"pushState\"](\n        context.navigateOptions.stateObj || {},\n        context.navigateOptions.title || \"\",\n        isItUsingHash ? `#${value}` : value\n      );\n      // This is to solve a nasty bug where the page doesn't scroll to the anchor.\n      // We set a microtask to update the hash only.\n      if (location && location.hash) {\n        context.instance.__freezeListening = true;\n        setTimeout(() => {\n          if (!isItUsingHash) {\n            let tmp = location.hash;\n            location.hash = \"\";\n            location.hash = tmp;\n          }\n          context.instance.__freezeListening = false;\n        }, 1);\n      }\n    } else if (isWindowAvailable) {\n      window.location.href = context.to;\n    }\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForLeaveHook(context: QContext, done) {\n  const instance = context.instance;\n  if (!instance.lastResolved()) {\n    done();\n    return;\n  }\n  Q(\n    instance.lastResolved().map((oldMatch) => {\n      return (_, leaveLoopDone) => {\n        // no leave hook\n        if (!oldMatch.route.hooks || !oldMatch.route.hooks.leave) {\n          leaveLoopDone();\n          return;\n        }\n        let runHook = false;\n        const newLocationVSOldMatch = context.instance.matchLocation(\n          oldMatch.route.path,\n          context.currentLocationPath,\n          false\n        );\n        if (oldMatch.route.path !== \"*\") {\n          runHook = !newLocationVSOldMatch;\n        } else {\n          const someOfTheLastOnesMatch = context.matches\n            ? context.matches.find((match) => {\n                return oldMatch.route.path === match.route.path;\n              })\n            : false;\n          runHook = !someOfTheLastOnesMatch;\n        }\n        if (undefinedOrTrue(context.navigateOptions, \"callHooks\") && runHook) {\n          Q(\n            oldMatch.route.hooks.leave\n              .map((f) => {\n                // just so we match the Q interface\n                return (_, d) =>\n                  f(\n                    (shouldStop) => {\n                      if (shouldStop === false) {\n                        context.instance.__markAsClean(context);\n                      } else {\n                        d();\n                      }\n                    },\n                    context.matches && context.matches.length > 0\n                      ? context.matches.length === 1\n                        ? context.matches[0]\n                        : context.matches\n                      : undefined\n                  );\n              })\n              .concat([() => leaveLoopDone()])\n          );\n          return;\n        } else {\n          leaveLoopDone();\n        }\n      };\n    }),\n    {},\n    () => done()\n  );\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function updateState(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateState\")) {\n    context.instance._setCurrent(context.matches);\n  }\n  done();\n}\n","import { QContext } from \"../index\";\nimport Q from \"./Q\";\nimport checkForLeaveHook from \"./middlewares/checkForLeaveHook\";\nimport checkForBeforeHook from \"./middlewares/checkForBeforeHook\";\nimport callHandler from \"./middlewares/callHandler\";\nimport checkForAfterHook from \"./middlewares/checkForAfterHook\";\nimport checkForAlreadyHook from \"./middlewares/checkForAlreadyHook\";\nimport checkForNotFoundHandler from \"./middlewares/checkForNotFoundHandler\";\nimport errorOut from \"./middlewares/errorOut\";\nimport flushCurrent from \"./middlewares/flushCurrent\";\nimport updateState from \"./middlewares/updateState\";\n\nexport const foundLifecycle = [\n  checkForAlreadyHook,\n  checkForBeforeHook,\n  callHandler,\n  checkForAfterHook,\n];\n\nexport const notFoundLifeCycle = [\n  checkForLeaveHook,\n  checkForNotFoundHandler,\n  Q.if(\n    ({ notFoundHandled }: QContext) => notFoundHandled,\n    foundLifecycle.concat([updateState]),\n    [errorOut, flushCurrent]\n  ),\n];\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForAlreadyHook(context: QContext, done) {\n  const current = context.instance.lastResolved();\n  if (\n    current &&\n    current[0] &&\n    current[0].route === context.match.route &&\n    current[0].url === context.match.url &&\n    current[0].queryString === context.match.queryString\n  ) {\n    current.forEach((c) => {\n      if (c.route.hooks && c.route.hooks.already) {\n        if (undefinedOrTrue(context.navigateOptions, \"callHooks\")) {\n          c.route.hooks.already.forEach((f) => f(context.match));\n        }\n      }\n    });\n    done(false);\n    return;\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForBeforeHook(context: QContext, done) {\n  if (\n    context.match.route.hooks &&\n    context.match.route.hooks.before &&\n    undefinedOrTrue(context.navigateOptions, \"callHooks\")\n  ) {\n    Q(\n      context.match.route.hooks.before\n        .map((f) => {\n          // just so we match the Q interface\n          return function beforeHookInternal(_, d) {\n            return f((shouldStop) => {\n              if (shouldStop === false) {\n                context.instance.__markAsClean(context);\n              } else {\n                d();\n              }\n            }, context.match);\n          };\n        })\n        .concat([() => done()])\n    );\n  } else {\n    done();\n  }\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function callHandler(context: QContext, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"callHandler\")) {\n    context.match.route.handler(context.match);\n  }\n  context.instance.updatePageLinks();\n  done();\n}\n","import { QContext } from \"../../index\";\nimport { undefinedOrTrue } from \"../utils\";\n\nexport default function checkForAfterHook(context: QContext, done) {\n  if (\n    context.match.route.hooks &&\n    context.match.route.hooks.after &&\n    undefinedOrTrue(context.navigateOptions, \"callHooks\")\n  ) {\n    context.match.route.hooks.after.forEach((f) => f(context.match));\n  }\n  done();\n}\n","import { QContext, Match } from \"../../index\";\nimport {\n  parseQuery,\n  extractGETParameters,\n  clean,\n  extractHashFromURL,\n} from \"../utils\";\n\nexport default function checkForNotFoundHandler(context: QContext, done) {\n  const notFoundRoute = context.instance._notFoundRoute;\n  if (notFoundRoute) {\n    context.notFoundHandled = true;\n    const [url, queryString] = extractGETParameters(\n      context.currentLocationPath\n    );\n    const hashString = extractHashFromURL(context.to);\n    notFoundRoute.path = clean(url);\n    const notFoundMatch: Match = {\n      url: notFoundRoute.path,\n      queryString,\n      hashString,\n      data: null,\n      route: notFoundRoute,\n      params: queryString !== \"\" ? parseQuery(queryString) : null,\n    };\n    context.matches = [notFoundMatch];\n    context.match = notFoundMatch;\n  }\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function errorOut(context: QContext, done) {\n  if (\n    !context.resolveOptions ||\n    context.resolveOptions.noMatchWarning === false ||\n    typeof context.resolveOptions.noMatchWarning === \"undefined\"\n  )\n    console.warn(\n      `Navigo: \"${context.currentLocationPath}\" didn't match any of the registered routes.`\n    );\n  done();\n}\n","import { QContext } from \"../../index\";\n\nexport default function flushCurrent(context: QContext, done) {\n  context.instance._setCurrent(null);\n  done();\n}\n","import { QContext } from \"../../index\";\nimport Q from \"../Q\";\nimport { foundLifecycle } from \"../lifecycles\";\nimport updateState from \"./updateState\";\nimport checkForLeaveHook from \"./checkForLeaveHook\";\n\nexport default function processMatches(context: QContext, done) {\n  let idx = 0;\n  function nextMatch() {\n    if (idx === context.matches.length) {\n      updateState(context, done);\n      return;\n    }\n    Q(\n      foundLifecycle,\n      { ...context, match: context.matches[idx] },\n      function end() {\n        idx += 1;\n        nextMatch();\n      }\n    );\n  }\n  checkForLeaveHook(context, nextMatch);\n}\n","import { QContext } from \"../../index\";\n\nexport default function waitingList(context: QContext) {\n  context.instance.__markAsClean(context);\n}\n","import {\n  Match,\n  Route,\n  RouteHooks,\n  QContext,\n  NavigateOptions,\n  ResolveOptions,\n  GenerateOptions,\n  Handler,\n  RouterOptions,\n} from \"../index\";\nimport NavigoRouter from \"../index\";\nimport {\n  pushStateAvailable,\n  matchRoute,\n  parseQuery,\n  extractGETParameters,\n  isFunction,\n  isString,\n  clean,\n  parseNavigateOptions,\n  windowAvailable,\n  getCurrentEnvURL,\n  accumulateHooks,\n  extractHashFromURL,\n} from \"./utils\";\nimport Q from \"./Q\";\nimport setLocationPath from \"./middlewares/setLocationPath\";\nimport matchPathToRegisteredRoutes from \"./middlewares/matchPathToRegisteredRoutes\";\nimport checkForDeprecationMethods from \"./middlewares/checkForDeprecationMethods\";\nimport checkForForceOp from \"./middlewares/checkForForceOp\";\nimport updateBrowserURL from \"./middlewares/updateBrowserURL\";\nimport processMatches from \"./middlewares/processMatches\";\nimport waitingList from \"./middlewares/waitingList\";\n\nimport { notFoundLifeCycle } from \"./lifecycles\";\n\nconst DEFAULT_LINK_SELECTOR = \"[data-navigo]\";\n\nexport default function Navigo(appRoute?: string, options?: RouterOptions) {\n  let DEFAULT_RESOLVE_OPTIONS: RouterOptions = options || {\n    strategy: \"ONE\",\n    hash: false,\n    noMatchWarning: false,\n    linksSelector: DEFAULT_LINK_SELECTOR,\n  };\n  let self: NavigoRouter = this;\n  let root = \"/\";\n  let current: Match[] = null;\n  let routes: Route[] = [];\n  let destroyed = false;\n  let genericHooks: RouteHooks;\n\n  const isPushStateAvailable = pushStateAvailable();\n  const isWindowAvailable = windowAvailable();\n\n  if (!appRoute) {\n    console.warn(\n      'Navigo requires a root path in its constructor. If not provided will use \"/\" as default.'\n    );\n  } else {\n    root = clean(appRoute);\n  }\n\n  function _checkForAHash(url: string): string {\n    if (url.indexOf(\"#\") >= 0) {\n      if (DEFAULT_RESOLVE_OPTIONS.hash === true) {\n        url = url.split(\"#\")[1] || \"/\";\n      } else {\n        url = url.split(\"#\")[0];\n      }\n    }\n    return url;\n  }\n  function composePathWithRoot(path: string) {\n    return clean(`${root}/${clean(path)}`);\n  }\n  function createRoute(\n    path: string | RegExp,\n    handler: Handler,\n    hooks: RouteHooks[],\n    name?: string\n  ): Route {\n    path = isString(path) ? composePathWithRoot(path as string) : path;\n    return {\n      name: name || clean(String(path)),\n      path,\n      handler,\n      hooks: accumulateHooks(hooks),\n    };\n  }\n\n  // public APIs\n  function on(\n    path: string | Function | Object | RegExp,\n    handler?: Handler,\n    hooks?: RouteHooks\n  ) {\n    if (typeof path === \"object\" && !(path instanceof RegExp)) {\n      Object.keys(path).forEach((p) => {\n        if (typeof path[p] === \"function\") {\n          this.on(p, path[p]);\n        } else {\n          const { uses: handler, as: name, hooks } = path[p];\n          routes.push(createRoute(p, handler, [genericHooks, hooks], name));\n        }\n      });\n      return this;\n    } else if (typeof path === \"function\") {\n      hooks = handler as RouteHooks;\n      handler = path as Handler;\n      path = root;\n    }\n    routes.push(\n      createRoute(path as string | RegExp, handler, [genericHooks, hooks])\n    );\n    return this;\n  }\n  function resolve(to?: string, options?: ResolveOptions): false | Match[] {\n    if (self.__dirty) {\n      self.__waiting.push(() => self.resolve(to, options));\n      return;\n    } else {\n      self.__dirty = true;\n    }\n    to = to ? `${clean(root)}/${clean(to)}` : undefined;\n    // console.log(\"-- resolve --> \" + to, self.__dirty);\n    const context: QContext = {\n      instance: self,\n      to,\n      currentLocationPath: to,\n      navigateOptions: {},\n      resolveOptions: { ...DEFAULT_RESOLVE_OPTIONS, ...options },\n    };\n    Q(\n      [\n        setLocationPath,\n        matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => matches && matches.length > 0,\n          processMatches,\n          notFoundLifeCycle\n        ),\n      ],\n      context,\n      waitingList\n    );\n\n    return context.matches ? context.matches : false;\n  }\n  function navigate(to: string, navigateOptions?: NavigateOptions): void {\n    // console.log(\"-- navigate --> \" + to, self.__dirty);\n    if (self.__dirty) {\n      self.__waiting.push(() => self.navigate(to, navigateOptions));\n      return;\n    } else {\n      self.__dirty = true;\n    }\n    to = `${clean(root)}/${clean(to)}`;\n    const context: QContext = {\n      instance: self,\n      to,\n      navigateOptions: navigateOptions || {},\n      resolveOptions:\n        navigateOptions && navigateOptions.resolveOptions\n          ? navigateOptions.resolveOptions\n          : DEFAULT_RESOLVE_OPTIONS,\n      currentLocationPath: _checkForAHash(to),\n    };\n    Q(\n      [\n        checkForDeprecationMethods,\n        checkForForceOp,\n        matchPathToRegisteredRoutes,\n        Q.if(\n          ({ matches }: QContext) => matches && matches.length > 0,\n          processMatches,\n          notFoundLifeCycle\n        ),\n        updateBrowserURL,\n        waitingList,\n      ],\n      context,\n      waitingList\n    );\n  }\n  function navigateByName(\n    name: string,\n    data?: Object,\n    options?: NavigateOptions\n  ): boolean {\n    const url = generate(name, data);\n    if (url !== null) {\n      navigate(url.replace(new RegExp(`^\\/?${root}`), \"\"), options);\n      return true;\n    }\n    return false;\n  }\n  function off(what: string | RegExp | Function) {\n    this.routes = routes = routes.filter((r) => {\n      if (isString(what)) {\n        return clean(r.path as string) !== clean(what as string);\n      } else if (isFunction(what)) {\n        return what !== r.handler;\n      }\n      return String(r.path) !== String(what);\n    });\n    return this;\n  }\n  function listen() {\n    if (isPushStateAvailable) {\n      this.__popstateListener = () => {\n        if (!self.__freezeListening) {\n          resolve();\n        }\n      };\n      window.addEventListener(\"popstate\", this.__popstateListener);\n    }\n  }\n  function destroy() {\n    this.routes = routes = [];\n    if (isPushStateAvailable) {\n      window.removeEventListener(\"popstate\", this.__popstateListener);\n    }\n    this.destroyed = destroyed = true;\n  }\n  function notFound(handler, hooks?: RouteHooks) {\n    self._notFoundRoute = createRoute(\n      \"*\",\n      handler,\n      [genericHooks, hooks],\n      \"__NOT_FOUND__\"\n    );\n    return this;\n  }\n  function updatePageLinks() {\n    if (!isWindowAvailable) return;\n    findLinks().forEach((link) => {\n      if (\n        \"false\" === link.getAttribute(\"data-navigo\") ||\n        \"_blank\" === link.getAttribute(\"target\")\n      ) {\n        if (link.hasListenerAttached) {\n          link.removeEventListener(\"click\", link.navigoHandler);\n        }\n        return;\n      }\n      if (!link.hasListenerAttached) {\n        link.hasListenerAttached = true;\n        link.navigoHandler = function (e) {\n          if (\n            (e.ctrlKey || e.metaKey) &&\n            e.target.tagName.toLowerCase() === \"a\"\n          ) {\n            return false;\n          }\n          let location = link.getAttribute(\"href\");\n          if (typeof location === \"undefined\" || location === null) {\n            return false;\n          }\n          // handling absolute paths\n          if (location.match(/^(http|https)/) && typeof URL !== \"undefined\") {\n            try {\n              const u = new URL(location);\n              location = u.pathname + u.search;\n            } catch (err) {}\n          }\n          const options = parseNavigateOptions(\n            link.getAttribute(\"data-navigo-options\")\n          );\n\n          if (!destroyed) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.navigate(clean(location), options);\n          }\n        };\n        link.addEventListener(\"click\", link.navigoHandler);\n      }\n    });\n    return self;\n  }\n  function findLinks() {\n    if (isWindowAvailable) {\n      return [].slice.call(\n        document.querySelectorAll(\n          DEFAULT_RESOLVE_OPTIONS.linksSelector || DEFAULT_LINK_SELECTOR\n        )\n      );\n    }\n    return [];\n  }\n  function link(path: string) {\n    return `/${root}/${clean(path)}`;\n  }\n  function setGenericHooks(hooks: RouteHooks) {\n    genericHooks = hooks;\n    return this;\n  }\n  function lastResolved(): Match[] | null {\n    return current;\n  }\n  function generate(\n    name: string,\n    data?: Object,\n    options?: GenerateOptions\n  ): string {\n    const route = routes.find((r) => r.name === name);\n    let result = null;\n    if (route) {\n      result = route.path as string;\n      if (data) {\n        for (let key in data) {\n          result = result.replace(\":\" + key, data[key]);\n        }\n      }\n      result = !result.match(/^\\//) ? `/${result}` : result;\n    }\n    if (result && options && !options.includeRoot) {\n      result = result.replace(new RegExp(`^/${root}`), \"\");\n    }\n    return result;\n  }\n  function getLinkPath(link) {\n    return link.getAttribute(\"href\");\n  }\n  function pathToMatchObject(path: string): Match {\n    const [url, queryString] = extractGETParameters(clean(path));\n    const params = queryString === \"\" ? null : parseQuery(queryString);\n    const hashString = extractHashFromURL(path);\n    const route = createRoute(url, () => {}, [genericHooks], url);\n    return {\n      url,\n      queryString,\n      hashString,\n      route,\n      data: null,\n      params: params,\n    };\n  }\n  function getCurrentLocation(): Match {\n    return pathToMatchObject(\n      clean(getCurrentEnvURL(root)).replace(new RegExp(`^${root}`), \"\")\n    );\n  }\n  function directMatchWithRegisteredRoutes(path: string): false | Match[] {\n    const context: QContext = {\n      instance: self,\n      currentLocationPath: path,\n      to: path,\n      navigateOptions: {},\n      resolveOptions: DEFAULT_RESOLVE_OPTIONS,\n    };\n    matchPathToRegisteredRoutes(context, () => {});\n    return context.matches ? context.matches : false;\n  }\n  function directMatchWithLocation(\n    path: string | RegExp,\n    currentLocation?: string,\n    annotatePathWithRoot?: boolean\n  ): false | Match {\n    if (\n      typeof currentLocation !== \"undefined\" &&\n      (typeof annotatePathWithRoot === \"undefined\" || annotatePathWithRoot)\n    ) {\n      currentLocation = composePathWithRoot(currentLocation);\n    }\n    const context: QContext = {\n      instance: self,\n      to: currentLocation,\n      currentLocationPath: currentLocation,\n    };\n    setLocationPath(context, () => {});\n    if (typeof path === \"string\") {\n      path =\n        typeof annotatePathWithRoot === \"undefined\" || annotatePathWithRoot\n          ? composePathWithRoot(path)\n          : path;\n    }\n    const match = matchRoute(context, {\n      name: String(path),\n      path,\n      handler: () => {},\n      hooks: {},\n    });\n    return match ? match : false;\n  }\n  function addHook(\n    type: string,\n    route: Route | string,\n    func: Function\n  ): Function {\n    if (typeof route === \"string\") {\n      route = getRoute(route);\n    }\n    if (route) {\n      if (!route.hooks[type]) route.hooks[type] = [];\n      route.hooks[type].push(func);\n      return () => {\n        (route as Route).hooks[type] = (route as Route).hooks[type].filter(\n          (f) => f !== func\n        );\n      };\n    } else {\n      console.warn(`Route doesn't exists: ${route}`);\n    }\n    return () => {};\n  }\n  function getRoute(nameOrHandler: string | Function): Route | undefined {\n    if (typeof nameOrHandler === \"string\") {\n      return routes.find((r) => r.name === composePathWithRoot(nameOrHandler));\n    }\n    return routes.find((r) => r.handler === nameOrHandler);\n  }\n  function __markAsClean(context: QContext) {\n    context.instance.__dirty = false;\n    if (context.instance.__waiting.length > 0) {\n      context.instance.__waiting.shift()();\n    }\n  }\n\n  this.root = root;\n  this.routes = routes;\n  this.destroyed = destroyed;\n  this.current = current;\n  this.__freezeListening = false;\n  this.__waiting = [];\n  this.__dirty = false;\n  this.__markAsClean = __markAsClean;\n\n  this.on = on;\n  this.off = off;\n  this.resolve = resolve;\n  this.navigate = navigate;\n  this.navigateByName = navigateByName;\n  this.destroy = destroy;\n  this.notFound = notFound;\n  this.updatePageLinks = updatePageLinks;\n  this.link = link;\n  this.hooks = setGenericHooks;\n  this.extractGETParameters = (url) =>\n    extractGETParameters(_checkForAHash(url));\n  this.lastResolved = lastResolved;\n  this.generate = generate;\n  this.getLinkPath = getLinkPath;\n  this.match = directMatchWithRegisteredRoutes;\n  this.matchLocation = directMatchWithLocation;\n  this.getCurrentLocation = getCurrentLocation;\n  this.addBeforeHook = addHook.bind(this, \"before\");\n  this.addAfterHook = addHook.bind(this, \"after\");\n  this.addAlreadyHook = addHook.bind(this, \"already\");\n  this.addLeaveHook = addHook.bind(this, \"leave\");\n  this.getRoute = getRoute;\n  this._pathToMatchObject = pathToMatchObject;\n  this._clean = clean;\n  this._checkForAHash = _checkForAHash;\n  this._setCurrent = (c) => (current = self.current = c);\n\n  listen.call(this);\n  updatePageLinks.call(this);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(407);\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }",null],"names":["HMR_HOST","HMR_PORT","HMR_SECURE","HMR_ENV_HASH","module","bundle","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","undefined","checkedAssets","acceptedAssets","assetsToAccept","location","protocol","indexOf","hostname","port","parent","isParcelRequire","WebSocket","getHostname","getPort","test","ws","onmessage","event","JSON","parse","type","removeErrorOverlay","assets","filter","asset","envHash","handled","forEach","didAccept","hmrAcceptCheck","root","id","depsByBundle","console","clear","hmrApply","i","length","hmrAcceptRun","window","reload","ansiDiagnostic","diagnostics","ansi","stack","codeframe","error","message","hints","join","overlay","createErrorOverlay","html","document","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","createElement","errorHTML","diagnostic","map","hint","innerHTML","modules","parents","k","d","dep","Array","isArray","concat","getParents","link","newLink","cloneNode","onload","parentNode","removeChild","setAttribute","getAttribute","split","Date","now","insertBefore","nextSibling","cssTimeout","setTimeout","links","querySelectorAll","href","servedFromHMRServer","RegExp","absolute","origin","updateLink","reloadCSS","deps","Function","output","cached","cache","some","v","cb","assetsToAlsoAccept","apply","router","loginForm","init","on","querySelector","loginviewDiv","render","btnSubmitLogin","addEventListener","signIn","resolve","form_data","FormData","append","elements","email","value","password","t","n","exports","define","amd","Navigo","self","default","N","o","r","pathname","search","hash","replace","pop","s","slice","decodeURIComponent","a","h","currentLocationPath","l","p","f","c","path","url","queryString","hashString","u","to","route","params","g","m","match","y","reduce","groups","instance","history","pushState","splice","_checkForAHash","routes","matches","resolveOptions","strategy","navigateOptions","shouldResolve","silent","force","_setCurrent","_pathToMatchObject","if","w","L","historyAPIMethod","stateObj","title","__freezeListening","lastResolved","hooks","leave","matchLocation","find","__markAsClean","R","already","before","handler","updatePageLinks","after","S","A","_notFoundRoute","notFoundHandled","P","noMatchWarning","E","Object","assign","arguments","prototype","hasOwnProperty","j","C","linksSelector","name","String","__dirty","_","x","H","__waiting","navigate","O","b","hasListenerAttached","navigoHandler","ctrlKey","metaKey","target","tagName","toLowerCase","URL","preventDefault","stopPropagation","removeEventListener","includeRoot","z","destroyed","current","shift","keys","uses","as","off","U","q","navigateByName","I","destroy","__popstateListener","notFound","F","extractGETParameters","generate","getLinkPath","getCurrentLocation","M","addBeforeHook","T","bind","addAfterHook","addAlreadyHook","addLeaveHook","getRoute","_clean","defineProperty","enumerable","get","factory","this","PARAMETER_REGEXP","WILDCARD_REGEXP","NOT_SURE_REGEXP","getCurrentEnvURL","fallback","windowAvailable","clean","isString","extractHashFromURL","tmp","parseQuery","query","pairs","pair","key","matchRoute","context","pattern","GETParams","paramNames","full","dots","regexp","names","index","regExpResultToParams","pushStateAvailable","undefinedOrTrue","obj","accumulateHooks","result","Q","funcs","done","idx","next","moveForward","setLocationPath","matchPathToRegisteredRoutes","checkForDeprecationMethods","checkForForceOp","condition","one","two","isWindowAvailable","isPushStateAvailable","updateBrowserURL","isItUsingHash","checkForLeaveHook","oldMatch","leaveLoopDone","runHook","newLocationVSOldMatch","shouldStop","updateState","foundLifecycle","notFoundLifeCycle","notFoundRoute","notFoundMatch","processMatches","nextMatch","waitingList","DEFAULT_LINK_SELECTOR","appRoute","options","genericHooks","DEFAULT_RESOLVE_OPTIONS","composePathWithRoot","createRoute","err","source","str","temp","parseNavigateOptions","pathToMatchObject","addHook","func","nameOrHandler","what","currentLocation","annotatePathWithRoot","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","definition","prop","LoginController","login","formdata","fetch","then","res","json"],"version":3,"file":"index.HASH_REF_5fb98dbe211a94e91d6f325cf6d0ad14.js.map","sourceRoot":"/__parcel_source_root/"}